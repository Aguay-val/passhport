# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, LibrIT
# This file is distributed under the same license as the PaSSHport package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaSSHport 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-10-17 19:31+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../passhport-admin/usages.rst:2
msgid "Building Simple Apps"
msgstr ""

#: ../../passhport-admin/usages.rst:4
msgid ""
"The ``flatpak`` utility provides a simple set of commands for building "
"and distributing applications. These allow creating new Flatpaks, into "
"which new or existing applications can be built."
msgstr ""

#: ../../passhport-admin/usages.rst:6
msgid ""
"This section describes how to build a simple application which doesn't "
"require any additional dependencies outside of the runtime it is built "
"against. In order to complete the examples, you should have completed the"
" steps in `Getting Setup <getting-setup.html>`_ first."
msgstr ""

#: ../../passhport-admin/usages.rst:9
msgid "Creating an app"
msgstr ""

#: ../../passhport-admin/usages.rst:11
msgid ""
"To create an application, the first step is to use the ``build-init`` "
"command. This creates a directory into which an application can be built,"
" which contains the correct directory structure and a metadata file which"
" contains information about the app. The format for build-init is::"
msgstr ""

#: ../../passhport-admin/usages.rst:15
msgid ""
"DIRECTORY is the name of the directory that will be created to contain "
"the application"
msgstr ""

#: ../../passhport-admin/usages.rst:16
msgid "APPNAME is the D-Bus name of the application"
msgstr ""

#: ../../passhport-admin/usages.rst:17
msgid "SDK is the name of the SDK that will be used to build the application"
msgstr ""

#: ../../passhport-admin/usages.rst:18
msgid ""
"RUNTIME is the name of the runtime that will be required by the "
"application"
msgstr ""

#: ../../passhport-admin/usages.rst:19
msgid "BRANCH is typically the version of the SDK and runtime that will be used"
msgstr ""

#: ../../passhport-admin/usages.rst:21
msgid ""
"For example, to build the GNOME Dictionary application using the GNOME "
"3.22 SDK, the command would look like::"
msgstr ""

#: ../../passhport-admin/usages.rst:25
msgid ""
"You can try this command now. In the next step we will build an "
"application inside the resulting dictionary directory."
msgstr ""

#: ../../passhport-admin/usages.rst:28
msgid "Building"
msgstr ""

#: ../../passhport-admin/usages.rst:30
msgid ""
"``flatpak build`` is used to build an application using an SDK. This "
"command is used to provide access to a sandbox. For example, the "
"following will create a file inside the appdir sandbox (in the files "
"directory)::"
msgstr ""

#: ../../passhport-admin/usages.rst:34
msgid "(It is best to remove this file before continuing.)"
msgstr ""

#: ../../passhport-admin/usages.rst:36
msgid ""
"The build command allows existing applications that have been made using "
"the traditional configure, make, make install routine to be built inside "
"a flatpak. You can try this using GNOME Dictionary. First, download the "
"source files, extract them and switch to the resulting directory::"
msgstr ""

#: ../../passhport-admin/usages.rst:42
msgid ""
"Then you can use the build command to build and install the source inside"
" the dictionary directory that was previously made::"
msgstr ""

#: ../../passhport-admin/usages.rst:49
msgid ""
"Since these are run in a sandbox, the compiler and other tools from the "
"SDK are used to build and install, rather than those on the host system."
msgstr ""

#: ../../passhport-admin/usages.rst:52
msgid "Completing the build"
msgstr ""

#: ../../passhport-admin/usages.rst:54
msgid ""
"Once an application has been built, the ``build-finish`` command needs to"
" be used to specify access to different parts of the host, such as "
"networking and graphics sockets. This command is also used to specify the"
" command that is used to run the app (done by modifying the metadata "
"file), and to create the application's exports directory. For example::"
msgstr ""

#: ../../passhport-admin/usages.rst:58
msgid ""
"At this point you have successfully built a flatpak and prepared it to be"
" run. To test the app, you need to export the Dictionary to a repository,"
" add that repository and then install and run the app::"
msgstr ""

#: ../../passhport-admin/usages.rst:65
msgid ""
"This exports the app, creates a repository called tutorial-repo, installs"
" the Dictionary application in the per-user installation area and runs "
"it."
msgstr ""

