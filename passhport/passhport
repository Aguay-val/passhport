#!/usr/bin/env python
# -*- coding:Utf-8 -*-

# Compatibility 2.7-3.4
from __future__ import absolute_import
from __future__ import unicode_literals
from builtins import input
from datetime import datetime

import os, sys, locale, requests

SCRIPT_LOGS_PATH="/var/log/passhport"

def get(url):
    """Send the GET request to the server and print a result.
       This is used to connect to passhportd, to check access"""
    try:
        r = requests.get(url)
    except requests.RequestException as e:
        print("ERROR: " + str(e.message))
    else:
        if r.status_code == requests.codes.ok:
            return r.text

    return 1

def checkandconnect(indexed_target_list, choice, username):
    """Check if the user have entered an accessible target
       then log everything and connect him"""
    for line in indexed_target_list:
        item_list = line.split(" ")
        if choice in item_list:
            pathlog = SCRIPT_LOGS_PATH + "/" + item_list[2] + "/"
            isodate = datetime.now().isoformat().replace(":",""). \
                      replace("-","").split('.')[0]
            filelog = isodate + "-" + str(os.getpid()) + "-" + item_list[2] + username
            # Create a log directory for each target
            if not os.path.exists(pathlog):
                os.mkdir(pathlog)
            os.system("script -q --timing=" + pathlog + filelog + ".timing " +
                      pathlog + filelog + ' -c "ssh root@' + item_list[2]+'"')
            return True
    return False

### MAIN ###
username = sys.argv[1]
url_passhport = "http://127.0.0.1:5000/"
print get(url_passhport + "user" + "/accessible_targets/" + username)
target_list = get(url_passhport + "user" + "/accessible_targets/" + \
                  username).split("\n")
indexed_target_list = []
number = 1

# Welcome the user
print("Welcome {}.".format(username))
print("Here is the list of servers you can access:")

# Print servers the user can access
for each_target in target_list:
    indexed_target_list.append(str(number) + " " + each_target)
    number = number + 1
print("\n".join(indexed_target_list))

sys.stdout.write("Type the number, name or hostname of the server you want to connect to. ")
choice = input("")
valid_input = False

while not checkandconnect(indexed_target_list, choice, username):
    print("You didn't type correctly, please try again.")
    sys.stdout.write("Type the number, name or hostname of the server you want to connect to. ")
    choice = input("")


